@using InterBook2._0.Views.Search.App_LocalResources;
@using System.Web.Optimization
@model InterBook2._0.Models.SearchModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Media/css/Search")

@*FORMULAIRE*@
<section class="container">
    <div class="form">
        <div class="inForm">

            <div id="rechercherTexte">

                <span class="searchJob">@Model.Profession</span>
                <span class="searchDate">Du @Html.DisplayFor(x => x.Debut) au @Html.DisplayFor(x => x.Fin)</span>
                <span class="searchTown">&Agrave @Model.Ville</span>

                <a href="#" id="pushFiltre"><img src="~/Media/img/home/rechercheAvancee.png" /></a>
                <a href="#" id="pushSearch">v</a>
            </div>
            @using (Html.BeginForm("Index", "Search", FormMethod.Get))
            {
                @Html.ValidationSummary(true)
                @Html.TextBoxFor(x => x.Profession, new { @class = "inputQuery", placeholder = Index.Quoi })
                @Html.TextBoxFor(x => x.Debut, new { @class = "inputDateQuery", @type = "date", id = "DateDebut", placeholder = "De", data_dependent_validation = "{\"from\": \"DateFin\", \"prop\": \"max\"}" })
                @Html.TextBoxFor(x => x.Fin, new { @class = "inputDateQuery", @type = "date", id = "DateFin", placeholder = "à", data_dependent_validation = "{\"from\": \"DateDebut\", \"prop\": \"min\"}" })
                @Html.TextBoxFor(x => x.Ville, new { @class = "inputQuery", required = "required", placeholder = Index.Ou })
                <a id="btnGeo">&nbsp;</a>
                <div class="subMit">
                    <input type="submit" value="" />    
                </div>
            }
        </div>
    </div>
</section>
<script src="~/Media/js/polyfiller.js"></script>
<script>
    /*
    *
    * DATE
    *
    */
    webshim.setOptions('forms', {
        lazyCustomMessages: true,
        addValidators: true
    });
    webshim.setOptions('forms-ext', {
        replaceUI: 'auto',
        types: 'date',
        date: {
            startView: 2,
            classes: 'hide-btnrow hide-inputbtns DatePicker inputQuery',
            openOnFocus: true,
            calculateWidth: false
        }
    });

    webshim.activeLang('fr');
    webshim.polyfill('forms forms-ext');

    $(function () {
        $('#DateDebut, #DateFin').prop('min', function () {
            return new Date().toJSON().split('T')[0];
        });
    });

    /*
    *
    * PROFESSION
    *
    */
    $("#Profession").autocomplete({
        source: function (request, response) {
            $.ajax({
                dataType: "json",
                type: 'Get',
                url: '/Home/GetProfessions',
                search: function () { $(this).addClass('ui-autocomplete-loading'); },
                open: function () { $(this).removeClass('ui-autocomplete-loading'); },
                delay: 0,
                data: {
                    debut: request.term,
                    maxRows: 8
                },
                success: function (data) {
                    response($.map(data, function (item) {
                        return item.Description;
                    }));
                }
            });
        }
    });

    /*
    *
    * VILLE
    *
    */
    $("#Ville").autocomplete({
        source: function (request, response) {

            $.ajax({
                dataType: "json",
                type: 'Get',
                url: '/Home/GetVilles',
                search: function () { $(this).addClass('ui-autocomplete-loading'); },
                open: function () { $(this).removeClass('ui-autocomplete-loading'); },
                delay: 0,
                data: {
                    debut: request.term,
                    maxRows: 8
                },
                success: function (data) {
                    response($.map(data, function (item) {
                        return retour = item.article + item.ville + " (" + item.cp + ")";
                    }));
                }
            });
        }
    });

    /*
    *
    * VILLE GEOLOCALISATION
    *
    */
    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition, showError);
        }
        else {
            alert("Votre navigateur ne prend pas en compte la géolocalisation HTML5");
        }
    }
    function showPosition(position) {
        $("#Ville").addClass('ui-autocomplete-loading');
        $.ajax({
            dataType: "json",
            type: 'Get',
            url: '/Home/GetVilleGeoloc',
            delay: 0,
            data: {
                latitude: position.coords.latitude,
                longitude: position.coords.longitude,
                distance: 5
            },
            success: function (item) {
                $("#Ville").removeClass('ui-autocomplete-loading');
                $("#Ville").val(item.article + item.ville + " (" + item.cp + ")");
            }
        });
    }
    function showError(error) {
        switch (error.code) {
            case error.PERMISSION_DENIED:
                //alert("User denied the request for Geolocation.");
                break;
            case error.POSITION_UNAVAILABLE:
                alert("Information sur votre position indisponible.");
                break;
            case error.TIMEOUT:
                alert("La demande pour obtenir l'emplacement de l'utilisateur a expiré.");
                break;
            case error.UNKNOWN_ERROR:
                alert("Une erreur inconnue est survenue.");
                break;
        }
    }

    var isMobile = {
        Android: function () {
            return navigator.userAgent.match(/Android/i);
        },
        BlackBerry: function () {
            return navigator.userAgent.match(/BlackBerry/i);
        },
        iOS: function () {
            return navigator.userAgent.match(/iPhone|iPad|iPod/i);
        },
        Opera: function () {
            return navigator.userAgent.match(/Opera Mini/i);
        },
        Windows: function () {
            return navigator.userAgent.match(/IEMobile/i);
        },
        any: function () {
            return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());
        }
    };

    if (isMobile.any()) {
        getLocation();
    }

    $("#btnGeo").on("click", function () {
        getLocation();
    });

    var nonVisible = true;
    $("a#pushSearch").on("click", function () {
        if (nonVisible) {
            nonVisible = false;
            $(".form")
            .animate(
                { height: "260px" },
                {
                    duration: 600,
                    easing: "easeInOutExpo"
                });
        }
        else {
            nonVisible = true;

            $(".form")
            .animate(
                { height: "40px" },
                {
                    duration: 600,
                    easing: "easeInOutExpo"
                });
        }
    });

    var nonVisibleFiltre = true;
    $("a#pushFiltre").on("click", function () {
        if (nonVisibleFiltre) {
            nonVisibleFiltre = false;
            $("#filter")
            .animate(
                { height: "170px" },
                {
                    duration: 600,
                    easing: "easeInOutExpo"
                });
        }
        else {
            nonVisibleFiltre = true;

            $("#filter")
            .animate(
                { height: "0px" },
                {
                    duration: 600,
                    easing: "easeInOutExpo"
                });
        }
    });
</script>



@*FILTRES*@
<section id="filtreResultat" class="container">

    <div id="filter" class="filter left">
        <h3>Critères de recherche</h3>
        <div class="nameFilter">Niveau d'expérience</div>
        <ul id="exp">
            <li id="exp-0">Tous</li>
            <li id="exp-1">Junior (0 à 1 ans)</li>
            <li id="exp-2">Expérimenté (2 à 5 ans)</li>
            <li id="exp-3">Senior (6+)</li>
        </ul>
    </div>

    @*RESULTATS*@
    <div id="results" class="results left">
        <h3><span>@(Model.luSearch != null ? Model.luSearch.Count.ToString() : "Aucun")</span> @(Model.luSearch == null || (Model.luSearch != null && Model.luSearch.Count <= 1) ? "résultat trouvé" : "résultats trouvés")</h3>
        <div>
            @if (Model.luSearch != null)
            {
                foreach (var u in Model.luSearch)
                {
                    <a href="/u/@u.uSearch.IdU.ToString()" class="lienUtil">
                        <article>
                            <div class="left image">
                                @if (u.uSearch.Util_Info != null && u.uSearch.Util_Info.photo != null)
                                {
                                    <img id="photo" src="~/Media/file/upload/photo/@(u.uSearch.Util_Info.photo).jpg" width="85" height="85" />
                                }
                            </div>
                            <div class="left detail">
                                @u.uSearch.Util_Postal.prenom.ToString() @u.uSearch.Util_Postal.nom.ToString()
                                @if (u.dist >= 0 && u.dist <= 1)
                                {
                                    <span class="distanceUtil"> - à @Model.Ville</span>
                                }
                                else if (u.dist > 1)
                                {
                                    <span class="distanceUtil"> - à @String.Format("{0:0.}", u.dist)km</span>
                                }
                                <br />
                                <p class="villeUtil">@u.uSearch.Util_Postal.Ref_Ville.ville.ToString()</p>
                            </div>
                            <div class="left">
                                <button class="contacterUtil"><img src="~/Media/img/search/contacter.png" /> Contacter</button>
                            </div>
                            <div class="clear"></div>
                        </article>
                    </a>
                }
            }
        </div>
    </div>
    <div class="clear"></div>

    
    @*GOOGLE MAP
    
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA8vsWgmO3tb8tkbOU1Gb4qkOWIiIqpVeM" type="text/javascript"></script>
    <script>
        google.maps.event.addDomListener(window, 'load', initialize);

        function initialize() {
            var geocoder = new google.maps.Geocoder();
            var addr, latitude, longitude;
            /* Récupération du champ "adresse" */
            addr = document.getElementById('Ville').value;
            /* Tentative de géocodage */
            geocoder.geocode({ 'address': addr }, function (results, status) {
                /* Si géolocalisation réussie */
                if (status == google.maps.GeocoderStatus.OK) {
                    /* Récupération des coordonnées */
                    latitude = results[0].geometry.location.lat();
                    longitude = results[0].geometry.location.lng();

                    var latlng = new google.maps.LatLng(latitude, longitude);


                    var mapOptions = {
                        center: latlng,
                        scrollWheel: false,
                        zoom: 12
                    };

                    //var marker = new google.maps.Marker({
                    //    position: latlng,
                    //    url: '/',
                    //    animation: google.maps.Animation.DROP
                    //});

                    var map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
                    //marker.setMap(map);
                    
                    /*RECUPERATION DES POINTS*/
                    var beaches = [
                                    ['Paris 05', 48.8434912, 2.351833899999974, 1],
                                    ['Paris 10', 48.8785618, 2.360368900000026, 2],
                                    ['Paris 13', 48.8278352, 2.293537199999946, 3],
                                    ['Paris 16', 48.8585799, 2.284701700000028, 4],
                                    ['Paris 19', 48.88237609999999, 2.382291699999996, 5]
                    ];
                    for (var i = 0; i < beaches.length; i++) {
                        var beach = beaches[i];
                        var myLatLng = new google.maps.LatLng(beach[1], beach[2]);
                        var marker = new google.maps.Marker({
                            position: myLatLng,
                            map: map,
                            title: beach[0],
                            zIndex: beach[3]
                        });
                        google.maps.event.addListener(marker, 'click', function () {
                            $("#result"+i).css("background", "silver");
                        });
                    }

                    /* Appel AJAX pour insertion en BDD 
                    var sendAjax = $.ajax({
                        type: "POST",
                        url: 'insert-in-bdd.php',
                        data: 'lat=' + latitude + '&lng=' + longitude + '&adr=' + addr,
                        success: handleResponse
                    });*/
                }
                function handleResponse() {
                    $('#answer').get(0).innerHTML = sendAjax.responseText;
                }
            });
        };

    </script>
    <div align="center" id="map-canvas" style="width: 700px; height: 500px"><br /></div>*@
    <div id="answer"></div>
</section>
<script type="text/javascript">

    function changeFilter(vars, id) {
        if (vars[id] == undefined) {
            $("#" + id + " > li").each(function (i) {
                if (i != 0)
                    $(this).html("<a rel='filter' href='" + document.URL + "&" + id + "=" + i + "'>" + $("#" + id + "-" + i).html() + "</a>");
            });
        }
        else if (vars[id] != undefined) {
            $("#" + id + " > li").each(function (i) {
                if (i != vars[id])
                    $(this).html("<a rel='filter' href='" + document.URL.replace("&" + id + "=" + vars[id], "&" + id + "=" + i) + "'>" + $("#" + id + "-" + i).text() + "</a>");
                else
                    $(this).html($("#" + id + "-" + i).text());
            });
        }
    }

    function changeResults(vars) {
        var filtres = {
            ville: vars["ville"],
            idVille: vars["idVille"],
            debut: vars["debut"],
            fin: vars["fin"],
            profession: vars["profession"],
            experience: vars["exp"],
            contrat: vars["cont"]
        };

        $.ajax({
            type: "GET",
            url: "/Search/Filtre",
            dataType: "json",
            contentType: "application/json",
            data: filtres
        })
            .done(function (data) {
                $("#results>div").html("");

                var eArr = data.keys();

                data.forEach(function (u) {
                    $("#results>div").append("          \
                        <article id='result" + eArr.next().value + "'>                   \
                            <a href='" + location.protocol + "//" + location.hostname + (location.port ? ':' + location.port : '') + "/u/" + u["IdU"] + "'>" + u["IdU"] + "</a>           \
                            <br />                  \
                            IDU_Email : " + u["idu_Email"] + "           \
                            <br />                  \
                            Experience : " + u["Util_Experience"][0]["Ref_Experience"]["Description"] + "           \
                            <br />                  \
                            Contrat : " + u["Util_Contrat"][0]["Ref_Contrat"]["Description"] + "           \
                        </article>                  \
                        ");
                });
            })
            .fail(function () {
                console.log("error");
            })
    }

    function filter() {
        var vars = [], hash;
        var q = decodeURIComponent(document.URL).split('?')[1];
        if (q != undefined) {
            q = q.split('&');
            for (var i = 0; i < q.length; i++) {
                hash = q[i].split('=');
                //vars.push(hash[1]);   vars[0]
                vars[hash[0].toLowerCase()] = hash[1];  // vars["ville"]
            }
        }
        //changeResults(vars);
        $("#filter > ul").each(function () {
            changeFilter(vars, this.id);
            //this.Attr("id").split("-")[0]
        });
    }

    function recur() {
        $('a[rel="filter"]').on('click', function () {
            //Recupere le lien cliqué
            pageurl = this.href;

            //Change l'url du navigateur
            if (pageurl != window.location) {
                window.history.pushState({ path: pageurl }, '', pageurl);
                filter();
                recur();
            }
            return false;
        });

    }

    $(function () {
        filter();
        //recur(); // Pour ne pas recharger la page
    });
</script>

